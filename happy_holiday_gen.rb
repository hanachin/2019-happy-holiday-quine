eval($c=%w(
L="\x80\xE6\x9Ci\x80\xD6Z{\x00\xE3\xDCk\x00\xC3Xk\xCD\xD8\xD1k\xAD\x95P{\xE6\x95Pk\xA6\xD9\xDDk".unpack('I*');
H="\u{1f31f}";
print "\x1b[2J\x1b[0;0H";
require('io/console');
z="eval($c=%w(#{$c}).join.gsub(%r(\u{1f31f}|\u{1f381}\u{1f381}\u{1f381}),''))".chars;
$r=->y{z.shift(y)*''};
2.times{puts$r[80]};;
S="\x20";
L.each_slice(4){|a|
  a.each{|i|
    2.times{
    puts($r[4]+i.to_s(2).gsub('1',H).gsub('0'){$r[2]}+$r[14])
  }
};
puts$r[80]
};
mg=("\u{1f384}"*9+"\u{1f3e0}"+"\u{1f3e1}").chars.then{|c|Enumerator.produce{c.sample}};
s=mg.take(40)*'';
x=y=22;
p=[];
m=->(s,h=y,w=x){"\x1b["+h.to_s+';'+w.to_s+'H'+s};
d2=->{print(m[V])};BEGIN{V="\u{1f936}\u{1f385}"[rand(1)]+"\u{1f98c}"};
Thread.new{STDIN.raw{|f|loop{
  d2[];
  c=f.getc;
  print(m[S*4]);
  c=="\x03"&&exit;c==?a&&x-=2;c==?s&&y+=1;c==?d&&x+=2;c==?w&&y-=1;
  c==S&&p<<[y,x];
  x<0&&x=0;
  y<21&&y=21;
  x>77&&x=77;
  y>23&&y=23;
}}};
g="\u{1f381}";
d1=->{
  print(m[s,24,0]);
  s=s[1..]+mg.next;
  p=p.filter_map{
    _1==23&&s[_2/2-2]=g;
    _1+1<25||next;
    print(m[S*2,_1,_2]);
    n=[_1+1,_2-2];
    _2-2>0&&(print(m[g,*n])||d2[]||n)
  }
};END{d2[];d1[]};
loop{
  d1[];
  sleep(0.1)
};;;;;
).join)
